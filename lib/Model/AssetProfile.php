<?php
/**
 * AssetProfile
 *
 * PHP version 5
 *
 * @category Class
 * @package  Bridgeman\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Bridgeman Images Public Api
 *
 * Last updated on 2019-12-19. Yml version [https://public-api.bridgemanimages.com/swagger.yaml](/swagger.yaml) Note that all endpoints have \"/1.0\" prefix, e.g. \"/1.0/asset/1699997/image/thumbnail\".
 *
 * OpenAPI spec version: 1.1.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.14
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Bridgeman\Client\Model;

use \ArrayAccess;
use \Bridgeman\Client\ObjectSerializer;

/**
 * AssetProfile Class Doc Comment
 *
 * @category Class
 * @package  Bridgeman\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AssetProfile implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AssetProfile';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
'artist' => 'string',
'artist_birth_date' => 'string',
'artist_id' => 'int',
'artist_name_no_birth_date' => 'string',
'artist_first_name' => 'string',
'artist_last_name' => 'string',
'artist_nationality' => 'string',
'bal_owned' => 'bool',
'black_and_white' => 'bool',
'category' => 'string',
'century_controlled' => 'int',
'century_to_controlled' => 'string',
'classification' => 'string',
'is_colour' => 'bool',
'comments' => 'string',
'copyright_handler' => 'string',
'copyright_holder' => 'string',
'copyright_status' => 'int',
'creators_duration_over_ride_is_set_to' => 'string',
'credit_line_compound' => 'string',
'credit_line_short' => 'string',
'credit1' => 'string',
'credit2' => 'string',
'copyright_death_date' => 'string',
'description' => 'string',
'dimensions' => 'string',
'show_on_web' => 'bool',
'rgb_blue' => 'int',
'rgb_green' => 'int',
'rgb_red' => 'int',
'footage' => 'string',
'hires_available' => 'bool',
'hr_size' => 'int',
'horizontal' => 'string',
'pixel_height' => 'int',
'pixel_width' => 'int',
'keywords' => 'string',
'location' => 'string',
'title' => 'string',
'supplier_name' => 'string',
'supplier_prefix' => 'string',
'supplier_reference' => 'string',
'status' => 'string',
'year_controlled' => 'string',
'year_to_controlled' => 'string',
'year_controlled_circa' => 'string',
'year_to_controlled_circa' => 'string',
'location_id' => 'int',
'num_lightboxes' => 'int',
'medium' => 'string',
'asset_is_illustration' => 'bool',
'asset_is_object' => 'bool',
'asset_is_photo' => 'bool',
'asset_is_film_still' => 'bool',
'restriction' => 'string',
'source' => 'string',
'special_instruction' => 'string',
'reason_withdrawn' => 'string',
'thumbnail_url' => 'string',
'website_url' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'artist' => null,
'artist_birth_date' => null,
'artist_id' => null,
'artist_name_no_birth_date' => null,
'artist_first_name' => null,
'artist_last_name' => null,
'artist_nationality' => null,
'bal_owned' => null,
'black_and_white' => null,
'category' => null,
'century_controlled' => null,
'century_to_controlled' => null,
'classification' => null,
'is_colour' => null,
'comments' => null,
'copyright_handler' => null,
'copyright_holder' => null,
'copyright_status' => null,
'creators_duration_over_ride_is_set_to' => null,
'credit_line_compound' => null,
'credit_line_short' => null,
'credit1' => null,
'credit2' => null,
'copyright_death_date' => null,
'description' => null,
'dimensions' => null,
'show_on_web' => null,
'rgb_blue' => null,
'rgb_green' => null,
'rgb_red' => null,
'footage' => null,
'hires_available' => null,
'hr_size' => null,
'horizontal' => null,
'pixel_height' => null,
'pixel_width' => null,
'keywords' => null,
'location' => null,
'title' => null,
'supplier_name' => null,
'supplier_prefix' => null,
'supplier_reference' => null,
'status' => null,
'year_controlled' => null,
'year_to_controlled' => null,
'year_controlled_circa' => null,
'year_to_controlled_circa' => null,
'location_id' => null,
'num_lightboxes' => null,
'medium' => null,
'asset_is_illustration' => null,
'asset_is_object' => null,
'asset_is_photo' => null,
'asset_is_film_still' => null,
'restriction' => null,
'source' => null,
'special_instruction' => null,
'reason_withdrawn' => null,
'thumbnail_url' => null,
'website_url' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'artist' => 'artist',
'artist_birth_date' => 'artist_birth_date',
'artist_id' => 'artist_id',
'artist_name_no_birth_date' => 'artist_name_no_birth_date',
'artist_first_name' => 'artist_first_name',
'artist_last_name' => 'artist_last_name',
'artist_nationality' => 'artist_nationality',
'bal_owned' => 'bal_owned',
'black_and_white' => 'black_and_white',
'category' => 'category',
'century_controlled' => 'century_controlled',
'century_to_controlled' => 'century_to_controlled',
'classification' => 'classification',
'is_colour' => 'is_colour',
'comments' => 'comments',
'copyright_handler' => 'copyright_handler',
'copyright_holder' => 'copyright_holder',
'copyright_status' => 'copyright_status',
'creators_duration_over_ride_is_set_to' => 'creators_duration_over-ride_is_set_to',
'credit_line_compound' => 'credit_line_compound',
'credit_line_short' => 'credit_line_short',
'credit1' => 'credit1',
'credit2' => 'credit2',
'copyright_death_date' => 'copyright_death_date',
'description' => 'description',
'dimensions' => 'dimensions',
'show_on_web' => 'show_on_web',
'rgb_blue' => 'rgb_blue',
'rgb_green' => 'rgb_green',
'rgb_red' => 'rgb_red',
'footage' => 'footage',
'hires_available' => 'hires_available',
'hr_size' => 'hr_size',
'horizontal' => 'horizontal',
'pixel_height' => 'pixel_height',
'pixel_width' => 'pixel_width',
'keywords' => 'keywords',
'location' => 'location',
'title' => 'title',
'supplier_name' => 'supplier_name',
'supplier_prefix' => 'supplier_prefix',
'supplier_reference' => 'supplier_reference',
'status' => 'status',
'year_controlled' => 'year_controlled',
'year_to_controlled' => 'year_to_controlled',
'year_controlled_circa' => 'year_controlled_circa',
'year_to_controlled_circa' => 'year_to_controlled_circa',
'location_id' => 'location_id',
'num_lightboxes' => 'num_lightboxes',
'medium' => 'medium',
'asset_is_illustration' => 'asset_is_illustration',
'asset_is_object' => 'asset_is_object',
'asset_is_photo' => 'asset_is_photo',
'asset_is_film_still' => 'asset_is_film_still',
'restriction' => 'restriction',
'source' => 'source',
'special_instruction' => 'special_instruction',
'reason_withdrawn' => 'reason_withdrawn',
'thumbnail_url' => 'thumbnail_url',
'website_url' => 'website_url'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'artist' => 'setArtist',
'artist_birth_date' => 'setArtistBirthDate',
'artist_id' => 'setArtistId',
'artist_name_no_birth_date' => 'setArtistNameNoBirthDate',
'artist_first_name' => 'setArtistFirstName',
'artist_last_name' => 'setArtistLastName',
'artist_nationality' => 'setArtistNationality',
'bal_owned' => 'setBalOwned',
'black_and_white' => 'setBlackAndWhite',
'category' => 'setCategory',
'century_controlled' => 'setCenturyControlled',
'century_to_controlled' => 'setCenturyToControlled',
'classification' => 'setClassification',
'is_colour' => 'setIsColour',
'comments' => 'setComments',
'copyright_handler' => 'setCopyrightHandler',
'copyright_holder' => 'setCopyrightHolder',
'copyright_status' => 'setCopyrightStatus',
'creators_duration_over_ride_is_set_to' => 'setCreatorsDurationOverRideIsSetTo',
'credit_line_compound' => 'setCreditLineCompound',
'credit_line_short' => 'setCreditLineShort',
'credit1' => 'setCredit1',
'credit2' => 'setCredit2',
'copyright_death_date' => 'setCopyrightDeathDate',
'description' => 'setDescription',
'dimensions' => 'setDimensions',
'show_on_web' => 'setShowOnWeb',
'rgb_blue' => 'setRgbBlue',
'rgb_green' => 'setRgbGreen',
'rgb_red' => 'setRgbRed',
'footage' => 'setFootage',
'hires_available' => 'setHiresAvailable',
'hr_size' => 'setHrSize',
'horizontal' => 'setHorizontal',
'pixel_height' => 'setPixelHeight',
'pixel_width' => 'setPixelWidth',
'keywords' => 'setKeywords',
'location' => 'setLocation',
'title' => 'setTitle',
'supplier_name' => 'setSupplierName',
'supplier_prefix' => 'setSupplierPrefix',
'supplier_reference' => 'setSupplierReference',
'status' => 'setStatus',
'year_controlled' => 'setYearControlled',
'year_to_controlled' => 'setYearToControlled',
'year_controlled_circa' => 'setYearControlledCirca',
'year_to_controlled_circa' => 'setYearToControlledCirca',
'location_id' => 'setLocationId',
'num_lightboxes' => 'setNumLightboxes',
'medium' => 'setMedium',
'asset_is_illustration' => 'setAssetIsIllustration',
'asset_is_object' => 'setAssetIsObject',
'asset_is_photo' => 'setAssetIsPhoto',
'asset_is_film_still' => 'setAssetIsFilmStill',
'restriction' => 'setRestriction',
'source' => 'setSource',
'special_instruction' => 'setSpecialInstruction',
'reason_withdrawn' => 'setReasonWithdrawn',
'thumbnail_url' => 'setThumbnailUrl',
'website_url' => 'setWebsiteUrl'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'artist' => 'getArtist',
'artist_birth_date' => 'getArtistBirthDate',
'artist_id' => 'getArtistId',
'artist_name_no_birth_date' => 'getArtistNameNoBirthDate',
'artist_first_name' => 'getArtistFirstName',
'artist_last_name' => 'getArtistLastName',
'artist_nationality' => 'getArtistNationality',
'bal_owned' => 'getBalOwned',
'black_and_white' => 'getBlackAndWhite',
'category' => 'getCategory',
'century_controlled' => 'getCenturyControlled',
'century_to_controlled' => 'getCenturyToControlled',
'classification' => 'getClassification',
'is_colour' => 'getIsColour',
'comments' => 'getComments',
'copyright_handler' => 'getCopyrightHandler',
'copyright_holder' => 'getCopyrightHolder',
'copyright_status' => 'getCopyrightStatus',
'creators_duration_over_ride_is_set_to' => 'getCreatorsDurationOverRideIsSetTo',
'credit_line_compound' => 'getCreditLineCompound',
'credit_line_short' => 'getCreditLineShort',
'credit1' => 'getCredit1',
'credit2' => 'getCredit2',
'copyright_death_date' => 'getCopyrightDeathDate',
'description' => 'getDescription',
'dimensions' => 'getDimensions',
'show_on_web' => 'getShowOnWeb',
'rgb_blue' => 'getRgbBlue',
'rgb_green' => 'getRgbGreen',
'rgb_red' => 'getRgbRed',
'footage' => 'getFootage',
'hires_available' => 'getHiresAvailable',
'hr_size' => 'getHrSize',
'horizontal' => 'getHorizontal',
'pixel_height' => 'getPixelHeight',
'pixel_width' => 'getPixelWidth',
'keywords' => 'getKeywords',
'location' => 'getLocation',
'title' => 'getTitle',
'supplier_name' => 'getSupplierName',
'supplier_prefix' => 'getSupplierPrefix',
'supplier_reference' => 'getSupplierReference',
'status' => 'getStatus',
'year_controlled' => 'getYearControlled',
'year_to_controlled' => 'getYearToControlled',
'year_controlled_circa' => 'getYearControlledCirca',
'year_to_controlled_circa' => 'getYearToControlledCirca',
'location_id' => 'getLocationId',
'num_lightboxes' => 'getNumLightboxes',
'medium' => 'getMedium',
'asset_is_illustration' => 'getAssetIsIllustration',
'asset_is_object' => 'getAssetIsObject',
'asset_is_photo' => 'getAssetIsPhoto',
'asset_is_film_still' => 'getAssetIsFilmStill',
'restriction' => 'getRestriction',
'source' => 'getSource',
'special_instruction' => 'getSpecialInstruction',
'reason_withdrawn' => 'getReasonWithdrawn',
'thumbnail_url' => 'getThumbnailUrl',
'website_url' => 'getWebsiteUrl'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const COPYRIGHT_STATUS_0 = 0;
const COPYRIGHT_STATUS_1 = 1;
const COPYRIGHT_STATUS_2 = 2;

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCopyrightStatusAllowableValues()
    {
        return [
            self::COPYRIGHT_STATUS_0,
self::COPYRIGHT_STATUS_1,
self::COPYRIGHT_STATUS_2,        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['artist'] = isset($data['artist']) ? $data['artist'] : null;
        $this->container['artist_birth_date'] = isset($data['artist_birth_date']) ? $data['artist_birth_date'] : null;
        $this->container['artist_id'] = isset($data['artist_id']) ? $data['artist_id'] : null;
        $this->container['artist_name_no_birth_date'] = isset($data['artist_name_no_birth_date']) ? $data['artist_name_no_birth_date'] : null;
        $this->container['artist_first_name'] = isset($data['artist_first_name']) ? $data['artist_first_name'] : null;
        $this->container['artist_last_name'] = isset($data['artist_last_name']) ? $data['artist_last_name'] : null;
        $this->container['artist_nationality'] = isset($data['artist_nationality']) ? $data['artist_nationality'] : null;
        $this->container['bal_owned'] = isset($data['bal_owned']) ? $data['bal_owned'] : null;
        $this->container['black_and_white'] = isset($data['black_and_white']) ? $data['black_and_white'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['century_controlled'] = isset($data['century_controlled']) ? $data['century_controlled'] : null;
        $this->container['century_to_controlled'] = isset($data['century_to_controlled']) ? $data['century_to_controlled'] : null;
        $this->container['classification'] = isset($data['classification']) ? $data['classification'] : null;
        $this->container['is_colour'] = isset($data['is_colour']) ? $data['is_colour'] : null;
        $this->container['comments'] = isset($data['comments']) ? $data['comments'] : null;
        $this->container['copyright_handler'] = isset($data['copyright_handler']) ? $data['copyright_handler'] : null;
        $this->container['copyright_holder'] = isset($data['copyright_holder']) ? $data['copyright_holder'] : null;
        $this->container['copyright_status'] = isset($data['copyright_status']) ? $data['copyright_status'] : null;
        $this->container['creators_duration_over_ride_is_set_to'] = isset($data['creators_duration_over_ride_is_set_to']) ? $data['creators_duration_over_ride_is_set_to'] : null;
        $this->container['credit_line_compound'] = isset($data['credit_line_compound']) ? $data['credit_line_compound'] : null;
        $this->container['credit_line_short'] = isset($data['credit_line_short']) ? $data['credit_line_short'] : null;
        $this->container['credit1'] = isset($data['credit1']) ? $data['credit1'] : null;
        $this->container['credit2'] = isset($data['credit2']) ? $data['credit2'] : null;
        $this->container['copyright_death_date'] = isset($data['copyright_death_date']) ? $data['copyright_death_date'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['dimensions'] = isset($data['dimensions']) ? $data['dimensions'] : null;
        $this->container['show_on_web'] = isset($data['show_on_web']) ? $data['show_on_web'] : null;
        $this->container['rgb_blue'] = isset($data['rgb_blue']) ? $data['rgb_blue'] : null;
        $this->container['rgb_green'] = isset($data['rgb_green']) ? $data['rgb_green'] : null;
        $this->container['rgb_red'] = isset($data['rgb_red']) ? $data['rgb_red'] : null;
        $this->container['footage'] = isset($data['footage']) ? $data['footage'] : null;
        $this->container['hires_available'] = isset($data['hires_available']) ? $data['hires_available'] : null;
        $this->container['hr_size'] = isset($data['hr_size']) ? $data['hr_size'] : null;
        $this->container['horizontal'] = isset($data['horizontal']) ? $data['horizontal'] : null;
        $this->container['pixel_height'] = isset($data['pixel_height']) ? $data['pixel_height'] : null;
        $this->container['pixel_width'] = isset($data['pixel_width']) ? $data['pixel_width'] : null;
        $this->container['keywords'] = isset($data['keywords']) ? $data['keywords'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['supplier_name'] = isset($data['supplier_name']) ? $data['supplier_name'] : null;
        $this->container['supplier_prefix'] = isset($data['supplier_prefix']) ? $data['supplier_prefix'] : null;
        $this->container['supplier_reference'] = isset($data['supplier_reference']) ? $data['supplier_reference'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['year_controlled'] = isset($data['year_controlled']) ? $data['year_controlled'] : null;
        $this->container['year_to_controlled'] = isset($data['year_to_controlled']) ? $data['year_to_controlled'] : null;
        $this->container['year_controlled_circa'] = isset($data['year_controlled_circa']) ? $data['year_controlled_circa'] : null;
        $this->container['year_to_controlled_circa'] = isset($data['year_to_controlled_circa']) ? $data['year_to_controlled_circa'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['num_lightboxes'] = isset($data['num_lightboxes']) ? $data['num_lightboxes'] : null;
        $this->container['medium'] = isset($data['medium']) ? $data['medium'] : null;
        $this->container['asset_is_illustration'] = isset($data['asset_is_illustration']) ? $data['asset_is_illustration'] : null;
        $this->container['asset_is_object'] = isset($data['asset_is_object']) ? $data['asset_is_object'] : null;
        $this->container['asset_is_photo'] = isset($data['asset_is_photo']) ? $data['asset_is_photo'] : null;
        $this->container['asset_is_film_still'] = isset($data['asset_is_film_still']) ? $data['asset_is_film_still'] : null;
        $this->container['restriction'] = isset($data['restriction']) ? $data['restriction'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['special_instruction'] = isset($data['special_instruction']) ? $data['special_instruction'] : null;
        $this->container['reason_withdrawn'] = isset($data['reason_withdrawn']) ? $data['reason_withdrawn'] : null;
        $this->container['thumbnail_url'] = isset($data['thumbnail_url']) ? $data['thumbnail_url'] : null;
        $this->container['website_url'] = isset($data['website_url']) ? $data['website_url'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getCopyrightStatusAllowableValues();
        if (!is_null($this->container['copyright_status']) && !in_array($this->container['copyright_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'copyright_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets artist
     *
     * @return string
     */
    public function getArtist()
    {
        return $this->container['artist'];
    }

    /**
     * Sets artist
     *
     * @param string $artist artist
     *
     * @return $this
     */
    public function setArtist($artist)
    {
        $this->container['artist'] = $artist;

        return $this;
    }

    /**
     * Gets artist_birth_date
     *
     * @return string
     */
    public function getArtistBirthDate()
    {
        return $this->container['artist_birth_date'];
    }

    /**
     * Sets artist_birth_date
     *
     * @param string $artist_birth_date artist_birth_date
     *
     * @return $this
     */
    public function setArtistBirthDate($artist_birth_date)
    {
        $this->container['artist_birth_date'] = $artist_birth_date;

        return $this;
    }

    /**
     * Gets artist_id
     *
     * @return int
     */
    public function getArtistId()
    {
        return $this->container['artist_id'];
    }

    /**
     * Sets artist_id
     *
     * @param int $artist_id artist_id
     *
     * @return $this
     */
    public function setArtistId($artist_id)
    {
        $this->container['artist_id'] = $artist_id;

        return $this;
    }

    /**
     * Gets artist_name_no_birth_date
     *
     * @return string
     */
    public function getArtistNameNoBirthDate()
    {
        return $this->container['artist_name_no_birth_date'];
    }

    /**
     * Sets artist_name_no_birth_date
     *
     * @param string $artist_name_no_birth_date artist_name_no_birth_date
     *
     * @return $this
     */
    public function setArtistNameNoBirthDate($artist_name_no_birth_date)
    {
        $this->container['artist_name_no_birth_date'] = $artist_name_no_birth_date;

        return $this;
    }

    /**
     * Gets artist_first_name
     *
     * @return string
     */
    public function getArtistFirstName()
    {
        return $this->container['artist_first_name'];
    }

    /**
     * Sets artist_first_name
     *
     * @param string $artist_first_name artist_first_name
     *
     * @return $this
     */
    public function setArtistFirstName($artist_first_name)
    {
        $this->container['artist_first_name'] = $artist_first_name;

        return $this;
    }

    /**
     * Gets artist_last_name
     *
     * @return string
     */
    public function getArtistLastName()
    {
        return $this->container['artist_last_name'];
    }

    /**
     * Sets artist_last_name
     *
     * @param string $artist_last_name artist_last_name
     *
     * @return $this
     */
    public function setArtistLastName($artist_last_name)
    {
        $this->container['artist_last_name'] = $artist_last_name;

        return $this;
    }

    /**
     * Gets artist_nationality
     *
     * @return string
     */
    public function getArtistNationality()
    {
        return $this->container['artist_nationality'];
    }

    /**
     * Sets artist_nationality
     *
     * @param string $artist_nationality artist_nationality
     *
     * @return $this
     */
    public function setArtistNationality($artist_nationality)
    {
        $this->container['artist_nationality'] = $artist_nationality;

        return $this;
    }

    /**
     * Gets bal_owned
     *
     * @return bool
     */
    public function getBalOwned()
    {
        return $this->container['bal_owned'];
    }

    /**
     * Sets bal_owned
     *
     * @param bool $bal_owned bal_owned
     *
     * @return $this
     */
    public function setBalOwned($bal_owned)
    {
        $this->container['bal_owned'] = $bal_owned;

        return $this;
    }

    /**
     * Gets black_and_white
     *
     * @return bool
     */
    public function getBlackAndWhite()
    {
        return $this->container['black_and_white'];
    }

    /**
     * Sets black_and_white
     *
     * @param bool $black_and_white black_and_white
     *
     * @return $this
     */
    public function setBlackAndWhite($black_and_white)
    {
        $this->container['black_and_white'] = $black_and_white;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets century_controlled
     *
     * @return int
     */
    public function getCenturyControlled()
    {
        return $this->container['century_controlled'];
    }

    /**
     * Sets century_controlled
     *
     * @param int $century_controlled century_controlled
     *
     * @return $this
     */
    public function setCenturyControlled($century_controlled)
    {
        $this->container['century_controlled'] = $century_controlled;

        return $this;
    }

    /**
     * Gets century_to_controlled
     *
     * @return string
     */
    public function getCenturyToControlled()
    {
        return $this->container['century_to_controlled'];
    }

    /**
     * Sets century_to_controlled
     *
     * @param string $century_to_controlled century_to_controlled
     *
     * @return $this
     */
    public function setCenturyToControlled($century_to_controlled)
    {
        $this->container['century_to_controlled'] = $century_to_controlled;

        return $this;
    }

    /**
     * Gets classification
     *
     * @return string
     */
    public function getClassification()
    {
        return $this->container['classification'];
    }

    /**
     * Sets classification
     *
     * @param string $classification classification
     *
     * @return $this
     */
    public function setClassification($classification)
    {
        $this->container['classification'] = $classification;

        return $this;
    }

    /**
     * Gets is_colour
     *
     * @return bool
     */
    public function getIsColour()
    {
        return $this->container['is_colour'];
    }

    /**
     * Sets is_colour
     *
     * @param bool $is_colour is_colour
     *
     * @return $this
     */
    public function setIsColour($is_colour)
    {
        $this->container['is_colour'] = $is_colour;

        return $this;
    }

    /**
     * Gets comments
     *
     * @return string
     */
    public function getComments()
    {
        return $this->container['comments'];
    }

    /**
     * Sets comments
     *
     * @param string $comments comments
     *
     * @return $this
     */
    public function setComments($comments)
    {
        $this->container['comments'] = $comments;

        return $this;
    }

    /**
     * Gets copyright_handler
     *
     * @return string
     */
    public function getCopyrightHandler()
    {
        return $this->container['copyright_handler'];
    }

    /**
     * Sets copyright_handler
     *
     * @param string $copyright_handler copyright_handler
     *
     * @return $this
     */
    public function setCopyrightHandler($copyright_handler)
    {
        $this->container['copyright_handler'] = $copyright_handler;

        return $this;
    }

    /**
     * Gets copyright_holder
     *
     * @return string
     */
    public function getCopyrightHolder()
    {
        return $this->container['copyright_holder'];
    }

    /**
     * Sets copyright_holder
     *
     * @param string $copyright_holder copyright_holder
     *
     * @return $this
     */
    public function setCopyrightHolder($copyright_holder)
    {
        $this->container['copyright_holder'] = $copyright_holder;

        return $this;
    }

    /**
     * Gets copyright_status
     *
     * @return int
     */
    public function getCopyrightStatus()
    {
        return $this->container['copyright_status'];
    }

    /**
     * Sets copyright_status
     *
     * @param int $copyright_status copyright_status
     *
     * @return $this
     */
    public function setCopyrightStatus($copyright_status)
    {
        $allowedValues = $this->getCopyrightStatusAllowableValues();
        if (!is_null($copyright_status) && !in_array($copyright_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'copyright_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['copyright_status'] = $copyright_status;

        return $this;
    }

    /**
     * Gets creators_duration_over_ride_is_set_to
     *
     * @return string
     */
    public function getCreatorsDurationOverRideIsSetTo()
    {
        return $this->container['creators_duration_over_ride_is_set_to'];
    }

    /**
     * Sets creators_duration_over_ride_is_set_to
     *
     * @param string $creators_duration_over_ride_is_set_to creators_duration_over_ride_is_set_to
     *
     * @return $this
     */
    public function setCreatorsDurationOverRideIsSetTo($creators_duration_over_ride_is_set_to)
    {
        $this->container['creators_duration_over_ride_is_set_to'] = $creators_duration_over_ride_is_set_to;

        return $this;
    }

    /**
     * Gets credit_line_compound
     *
     * @return string
     */
    public function getCreditLineCompound()
    {
        return $this->container['credit_line_compound'];
    }

    /**
     * Sets credit_line_compound
     *
     * @param string $credit_line_compound credit_line_compound
     *
     * @return $this
     */
    public function setCreditLineCompound($credit_line_compound)
    {
        $this->container['credit_line_compound'] = $credit_line_compound;

        return $this;
    }

    /**
     * Gets credit_line_short
     *
     * @return string
     */
    public function getCreditLineShort()
    {
        return $this->container['credit_line_short'];
    }

    /**
     * Sets credit_line_short
     *
     * @param string $credit_line_short credit_line_short
     *
     * @return $this
     */
    public function setCreditLineShort($credit_line_short)
    {
        $this->container['credit_line_short'] = $credit_line_short;

        return $this;
    }

    /**
     * Gets credit1
     *
     * @return string
     */
    public function getCredit1()
    {
        return $this->container['credit1'];
    }

    /**
     * Sets credit1
     *
     * @param string $credit1 credit1
     *
     * @return $this
     */
    public function setCredit1($credit1)
    {
        $this->container['credit1'] = $credit1;

        return $this;
    }

    /**
     * Gets credit2
     *
     * @return string
     */
    public function getCredit2()
    {
        return $this->container['credit2'];
    }

    /**
     * Sets credit2
     *
     * @param string $credit2 credit2
     *
     * @return $this
     */
    public function setCredit2($credit2)
    {
        $this->container['credit2'] = $credit2;

        return $this;
    }

    /**
     * Gets copyright_death_date
     *
     * @return string
     */
    public function getCopyrightDeathDate()
    {
        return $this->container['copyright_death_date'];
    }

    /**
     * Sets copyright_death_date
     *
     * @param string $copyright_death_date copyright_death_date
     *
     * @return $this
     */
    public function setCopyrightDeathDate($copyright_death_date)
    {
        $this->container['copyright_death_date'] = $copyright_death_date;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets dimensions
     *
     * @return string
     */
    public function getDimensions()
    {
        return $this->container['dimensions'];
    }

    /**
     * Sets dimensions
     *
     * @param string $dimensions dimensions
     *
     * @return $this
     */
    public function setDimensions($dimensions)
    {
        $this->container['dimensions'] = $dimensions;

        return $this;
    }

    /**
     * Gets show_on_web
     *
     * @return bool
     */
    public function getShowOnWeb()
    {
        return $this->container['show_on_web'];
    }

    /**
     * Sets show_on_web
     *
     * @param bool $show_on_web show_on_web
     *
     * @return $this
     */
    public function setShowOnWeb($show_on_web)
    {
        $this->container['show_on_web'] = $show_on_web;

        return $this;
    }

    /**
     * Gets rgb_blue
     *
     * @return int
     */
    public function getRgbBlue()
    {
        return $this->container['rgb_blue'];
    }

    /**
     * Sets rgb_blue
     *
     * @param int $rgb_blue rgb_blue
     *
     * @return $this
     */
    public function setRgbBlue($rgb_blue)
    {
        $this->container['rgb_blue'] = $rgb_blue;

        return $this;
    }

    /**
     * Gets rgb_green
     *
     * @return int
     */
    public function getRgbGreen()
    {
        return $this->container['rgb_green'];
    }

    /**
     * Sets rgb_green
     *
     * @param int $rgb_green rgb_green
     *
     * @return $this
     */
    public function setRgbGreen($rgb_green)
    {
        $this->container['rgb_green'] = $rgb_green;

        return $this;
    }

    /**
     * Gets rgb_red
     *
     * @return int
     */
    public function getRgbRed()
    {
        return $this->container['rgb_red'];
    }

    /**
     * Sets rgb_red
     *
     * @param int $rgb_red rgb_red
     *
     * @return $this
     */
    public function setRgbRed($rgb_red)
    {
        $this->container['rgb_red'] = $rgb_red;

        return $this;
    }

    /**
     * Gets footage
     *
     * @return string
     */
    public function getFootage()
    {
        return $this->container['footage'];
    }

    /**
     * Sets footage
     *
     * @param string $footage footage
     *
     * @return $this
     */
    public function setFootage($footage)
    {
        $this->container['footage'] = $footage;

        return $this;
    }

    /**
     * Gets hires_available
     *
     * @return bool
     */
    public function getHiresAvailable()
    {
        return $this->container['hires_available'];
    }

    /**
     * Sets hires_available
     *
     * @param bool $hires_available hires_available
     *
     * @return $this
     */
    public function setHiresAvailable($hires_available)
    {
        $this->container['hires_available'] = $hires_available;

        return $this;
    }

    /**
     * Gets hr_size
     *
     * @return int
     */
    public function getHrSize()
    {
        return $this->container['hr_size'];
    }

    /**
     * Sets hr_size
     *
     * @param int $hr_size hr_size
     *
     * @return $this
     */
    public function setHrSize($hr_size)
    {
        $this->container['hr_size'] = $hr_size;

        return $this;
    }

    /**
     * Gets horizontal
     *
     * @return string
     */
    public function getHorizontal()
    {
        return $this->container['horizontal'];
    }

    /**
     * Sets horizontal
     *
     * @param string $horizontal horizontal
     *
     * @return $this
     */
    public function setHorizontal($horizontal)
    {
        $this->container['horizontal'] = $horizontal;

        return $this;
    }

    /**
     * Gets pixel_height
     *
     * @return int
     */
    public function getPixelHeight()
    {
        return $this->container['pixel_height'];
    }

    /**
     * Sets pixel_height
     *
     * @param int $pixel_height pixel_height
     *
     * @return $this
     */
    public function setPixelHeight($pixel_height)
    {
        $this->container['pixel_height'] = $pixel_height;

        return $this;
    }

    /**
     * Gets pixel_width
     *
     * @return int
     */
    public function getPixelWidth()
    {
        return $this->container['pixel_width'];
    }

    /**
     * Sets pixel_width
     *
     * @param int $pixel_width pixel_width
     *
     * @return $this
     */
    public function setPixelWidth($pixel_width)
    {
        $this->container['pixel_width'] = $pixel_width;

        return $this;
    }

    /**
     * Gets keywords
     *
     * @return string
     */
    public function getKeywords()
    {
        return $this->container['keywords'];
    }

    /**
     * Sets keywords
     *
     * @param string $keywords keywords
     *
     * @return $this
     */
    public function setKeywords($keywords)
    {
        $this->container['keywords'] = $keywords;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets supplier_name
     *
     * @return string
     */
    public function getSupplierName()
    {
        return $this->container['supplier_name'];
    }

    /**
     * Sets supplier_name
     *
     * @param string $supplier_name supplier_name
     *
     * @return $this
     */
    public function setSupplierName($supplier_name)
    {
        $this->container['supplier_name'] = $supplier_name;

        return $this;
    }

    /**
     * Gets supplier_prefix
     *
     * @return string
     */
    public function getSupplierPrefix()
    {
        return $this->container['supplier_prefix'];
    }

    /**
     * Sets supplier_prefix
     *
     * @param string $supplier_prefix supplier_prefix
     *
     * @return $this
     */
    public function setSupplierPrefix($supplier_prefix)
    {
        $this->container['supplier_prefix'] = $supplier_prefix;

        return $this;
    }

    /**
     * Gets supplier_reference
     *
     * @return string
     */
    public function getSupplierReference()
    {
        return $this->container['supplier_reference'];
    }

    /**
     * Sets supplier_reference
     *
     * @param string $supplier_reference supplier_reference
     *
     * @return $this
     */
    public function setSupplierReference($supplier_reference)
    {
        $this->container['supplier_reference'] = $supplier_reference;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets year_controlled
     *
     * @return string
     */
    public function getYearControlled()
    {
        return $this->container['year_controlled'];
    }

    /**
     * Sets year_controlled
     *
     * @param string $year_controlled year_controlled
     *
     * @return $this
     */
    public function setYearControlled($year_controlled)
    {
        $this->container['year_controlled'] = $year_controlled;

        return $this;
    }

    /**
     * Gets year_to_controlled
     *
     * @return string
     */
    public function getYearToControlled()
    {
        return $this->container['year_to_controlled'];
    }

    /**
     * Sets year_to_controlled
     *
     * @param string $year_to_controlled year_to_controlled
     *
     * @return $this
     */
    public function setYearToControlled($year_to_controlled)
    {
        $this->container['year_to_controlled'] = $year_to_controlled;

        return $this;
    }

    /**
     * Gets year_controlled_circa
     *
     * @return string
     */
    public function getYearControlledCirca()
    {
        return $this->container['year_controlled_circa'];
    }

    /**
     * Sets year_controlled_circa
     *
     * @param string $year_controlled_circa year_controlled_circa
     *
     * @return $this
     */
    public function setYearControlledCirca($year_controlled_circa)
    {
        $this->container['year_controlled_circa'] = $year_controlled_circa;

        return $this;
    }

    /**
     * Gets year_to_controlled_circa
     *
     * @return string
     */
    public function getYearToControlledCirca()
    {
        return $this->container['year_to_controlled_circa'];
    }

    /**
     * Sets year_to_controlled_circa
     *
     * @param string $year_to_controlled_circa year_to_controlled_circa
     *
     * @return $this
     */
    public function setYearToControlledCirca($year_to_controlled_circa)
    {
        $this->container['year_to_controlled_circa'] = $year_to_controlled_circa;

        return $this;
    }

    /**
     * Gets location_id
     *
     * @return int
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     *
     * @param int $location_id location_id
     *
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets num_lightboxes
     *
     * @return int
     */
    public function getNumLightboxes()
    {
        return $this->container['num_lightboxes'];
    }

    /**
     * Sets num_lightboxes
     *
     * @param int $num_lightboxes num_lightboxes
     *
     * @return $this
     */
    public function setNumLightboxes($num_lightboxes)
    {
        $this->container['num_lightboxes'] = $num_lightboxes;

        return $this;
    }

    /**
     * Gets medium
     *
     * @return string
     */
    public function getMedium()
    {
        return $this->container['medium'];
    }

    /**
     * Sets medium
     *
     * @param string $medium medium
     *
     * @return $this
     */
    public function setMedium($medium)
    {
        $this->container['medium'] = $medium;

        return $this;
    }

    /**
     * Gets asset_is_illustration
     *
     * @return bool
     */
    public function getAssetIsIllustration()
    {
        return $this->container['asset_is_illustration'];
    }

    /**
     * Sets asset_is_illustration
     *
     * @param bool $asset_is_illustration asset_is_illustration
     *
     * @return $this
     */
    public function setAssetIsIllustration($asset_is_illustration)
    {
        $this->container['asset_is_illustration'] = $asset_is_illustration;

        return $this;
    }

    /**
     * Gets asset_is_object
     *
     * @return bool
     */
    public function getAssetIsObject()
    {
        return $this->container['asset_is_object'];
    }

    /**
     * Sets asset_is_object
     *
     * @param bool $asset_is_object asset_is_object
     *
     * @return $this
     */
    public function setAssetIsObject($asset_is_object)
    {
        $this->container['asset_is_object'] = $asset_is_object;

        return $this;
    }

    /**
     * Gets asset_is_photo
     *
     * @return bool
     */
    public function getAssetIsPhoto()
    {
        return $this->container['asset_is_photo'];
    }

    /**
     * Sets asset_is_photo
     *
     * @param bool $asset_is_photo asset_is_photo
     *
     * @return $this
     */
    public function setAssetIsPhoto($asset_is_photo)
    {
        $this->container['asset_is_photo'] = $asset_is_photo;

        return $this;
    }

    /**
     * Gets asset_is_film_still
     *
     * @return bool
     */
    public function getAssetIsFilmStill()
    {
        return $this->container['asset_is_film_still'];
    }

    /**
     * Sets asset_is_film_still
     *
     * @param bool $asset_is_film_still asset_is_film_still
     *
     * @return $this
     */
    public function setAssetIsFilmStill($asset_is_film_still)
    {
        $this->container['asset_is_film_still'] = $asset_is_film_still;

        return $this;
    }

    /**
     * Gets restriction
     *
     * @return string
     */
    public function getRestriction()
    {
        return $this->container['restriction'];
    }

    /**
     * Sets restriction
     *
     * @param string $restriction restriction
     *
     * @return $this
     */
    public function setRestriction($restriction)
    {
        $this->container['restriction'] = $restriction;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets special_instruction
     *
     * @return string
     */
    public function getSpecialInstruction()
    {
        return $this->container['special_instruction'];
    }

    /**
     * Sets special_instruction
     *
     * @param string $special_instruction special_instruction
     *
     * @return $this
     */
    public function setSpecialInstruction($special_instruction)
    {
        $this->container['special_instruction'] = $special_instruction;

        return $this;
    }

    /**
     * Gets reason_withdrawn
     *
     * @return string
     */
    public function getReasonWithdrawn()
    {
        return $this->container['reason_withdrawn'];
    }

    /**
     * Sets reason_withdrawn
     *
     * @param string $reason_withdrawn reason_withdrawn
     *
     * @return $this
     */
    public function setReasonWithdrawn($reason_withdrawn)
    {
        $this->container['reason_withdrawn'] = $reason_withdrawn;

        return $this;
    }

    /**
     * Gets thumbnail_url
     *
     * @return string
     */
    public function getThumbnailUrl()
    {
        return $this->container['thumbnail_url'];
    }

    /**
     * Sets thumbnail_url
     *
     * @param string $thumbnail_url thumbnail_url
     *
     * @return $this
     */
    public function setThumbnailUrl($thumbnail_url)
    {
        $this->container['thumbnail_url'] = $thumbnail_url;

        return $this;
    }

    /**
     * Gets website_url
     *
     * @return string
     */
    public function getWebsiteUrl()
    {
        return $this->container['website_url'];
    }

    /**
     * Sets website_url
     *
     * @param string $website_url website_url
     *
     * @return $this
     */
    public function setWebsiteUrl($website_url)
    {
        $this->container['website_url'] = $website_url;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
